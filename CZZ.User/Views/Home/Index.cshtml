<div id="app">
    <select class="form-select" aria-label="Default select example" v-model="selectedFunction">
        <option value="Home">首頁</option>
        <option value="House">租屋助手</option>
        <option value="CloudDrive">雲端硬碟</option>
    </select>

    <div v-if="selectedFunction === 'House'">
        <ul>
            <li v-for="item in fItems" v-on:click="date = item">{{item}}</li>
        </ul>
        <div>
            <object-list :date="date"></object-list>
        </div>
    </div>
    <div v-else-if="selectedFunction === 'CloudDrive'">
        <cloud-drive></cloud-drive>
    </div>
</div>

@section Scripts
    {
    <script type="module">
        const ಠ_ಠ = 'ಠ_ಠ';
        console.log(ಠ_ಠ);

        import ObjectList from '/vue-components/House/ObjectList.js'
        import CloudDrive from '/vue-components/NAS/CloudDrive.js'

        const { Tooltip, Popover, Carousel } = bootstrap

        export const tooltip = {
            mounted(el) {
                const tooltip = new Tooltip(el)
            }
        }

        export const popover = {
            mounted(el) {
                const popover = new Popover(el)
            }
        }

        export const carousel = {
            mounted(el) {
                const carousel = new Carousel(`#${el.id}`, {
                    //interval: 2000, //輪播時間(毫秒)
                    touch: false
                })
            }
        }

        const apiUrl = "https://localhost:7224/CZZ/GetPath";
        const nasUrl = "https://localhost:7224/CZZ/GetNASPath";

        import { createApp, ref, computed, onMounted } from 'https://unpkg.com/vue@3/dist/vue.esm-browser.js'

        createApp({
            components: {
                'object-list': ObjectList,
                'cloud-drive': CloudDrive
            },
            setup() {
                const items = ref([]);
                const error = ref('');
                const date = ref('');
                const selectedFunction = ref('Home');

                onMounted(async () => {
                    await fetchData();
                })

                async function fetchData() {
                    axios.get(apiUrl)
                        .then((response) => {
                            items.value = response.data;
                        })
                        .catch((error) => {
                            error.value = error;
                        });
                }

                const fItems = computed(() => {
                    const datas = [...items.value.filter(t => {
                        return t !== 'database';
                    })]
                    return datas
                });

                return {
                    fItems,
                    error,
                    date,
                    selectedFunction
                }
            }
        }).mount('#app');
    </script>
}