@section Scripts
    {
    <script type="module">
        const { Tooltip, Popover, Carousel } = bootstrap


        export const tooltip = {
            mounted(el) {
                const tooltip = new Tooltip(el)
            }
        }

        export const popover = {
            mounted(el) {
                const popover = new Popover(el)
            }
        }

        export const carousel = {
            mounted(el) {   
                const carousel = new Carousel(`#${el.id}`,{
                    interval: 2000,
                    touch: false
                })
            }
        }
       
        const apiUrl = "https://localhost:7224/CZZ/GetObject?Date=" + '@ViewBag.Date';

        const app = Vue.createApp({
            data() {
                return {
                    items: [],
                    web: "https://rent.591.com.tw/home/",
                    queryString: '',
                    sortType: '',
                    isReverse: false,
                    error: ''
                };
            },
            methods: {
                fetchData() {
                    axios.get(apiUrl)
                        .then((response) => {
                            this.items = response.data.data.data;
                        })
                        .catch((error) => {
                            this.error = error;
                        });
                },
                changeType(type) {
                    if (type == this.sortType) {
                        this.isReverse = !this.isReverse
                    }
                    else {
                        this.sortType = type
                    }
                }
            },
            watch() {

            },
            mounted() {
                this.fetchData();
            },
            computed: {
                filteredItems() {
                    // WHY?
                    // 先將 items 序列化到 cloned
                    const cloned = JSON.parse(JSON.stringify(this.items));
                    // 再使用展開運算符將 cloned 複製到 temp
                    // temp 不使用同一個記憶體位置，所以不會影響到原本的 items
                    let temp = [...cloned]
                    const searchText = this.queryString
                    const type = this.sortType
                    const sortOrder = this.isReverse

                    if (searchText) {
                        temp = [...cloned.filter(t => {
                            return t.title.indexOf(searchText) > -1 || t.location.indexOf(searchText) > -1;
                        })]

                        temp.forEach(item=> {
                            item.location = item.location.replace(searchText, `<span style="color:red;font-weight:bold">${searchText}</span>`)
                            item.title = item.title.replace(searchText, `<span style="color:red;font-weight:bold">${searchText}</span>`)
                        })
                    }

                    temp.sort((a, b) => {
                        if (typeof (a[type]) === 'string') {
                            if (this.isReverse) {
                                return (parseInt(b[type].replace(/,/g, ''))) - (parseInt(a[type].replace(/,/g, '')))
                            }
                            else {
                                return (parseInt(a[type].replace(/,/g, ''))) - (parseInt(b[type].replace(/,/g, '')))
                            }
                        }
                        else {
                            if (this.isReverse) {
                                return b[type] - a[type]
                            }
                            else {
                                return a[type] - b[type]
                            }
                        }
                    })
                    console.log(temp.length)
                    return temp;
                }
            }
        });

        app.directive('tooltip', tooltip)
            .directive('popover', popover)
            .directive('carousel-example-indicators', carousel)
            .mount("#app");


    </script>
}

<div id="app">
    <div v-if="!error">
        <h2>@ViewBag.Date 的新物件</h2> @*@ViewBag: 雙刀流，要改掉*@
        <p>Search <input v-model="queryString" /></p>
        <table class="table">
            <thead>
                <tr>
                    <th>預覽</th>
                    <th>標題</th>
                    <th class="click" v-on:click="changeType('area')">
                        大小
                        <span class="icon" :class="{'inverse': isReverse}" v-if="sortType == 'area'">
                            <i class="text-success">▲</i>
                        </span>
                    </th>
                    <th>樓層</th>
                    <th class="click" v-on:click="changeType('price')">
                        租金
                        <span class="icon" :class="{'inverse': isReverse}" v-if="sortType == 'price'">
                            <i class="text-success">▲</i>
                        </span>
                    </th>
                    <th>地址</th>
                    <th>來源</th>
                </tr>
            </thead>
            <tbody>
                <tr v-for="(item,index) in filteredItems" :key="item.post_id" >
                    <td style="width: 20%">
                        <div :id="'carousel-example-indicators'+index" data-bs-ride="carousel" class="carousel slide" v-carousel-example-indicators>
                            <div class="carousel-indicators">
                                <template v-for="(img,index2) in item.photo_list.slice(0,3)" >
                                    <button type="button" :data-bs-target="'#carousel-example-indicators'+index" :data-bs-slide-to="index2" :class="{'active':index2===0}" aria-current="true" :aria-label="'Slide '+index2"></button>
                                </template>
                            </div>
                            <div class="carousel-inner">
                                <div v-for="(img,index2) in item.photo_list.slice(0,3)" class="carousel-item" :class="{'active':index2===0}">
                                    <img :src="img" class="d-block img-fluid">
                                </div>
                            </div>
                            <button class="carousel-control-prev" type="button" :data-bs-target="'#carousel-example-indicators'+index" data-bs-slide="prev">
                                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                <span class="visually-hidden">Previous</span>
                            </button>
                            <button class="carousel-control-next" type="button" :data-bs-target="'#carousel-example-indicators'+index" data-bs-slide="next">
                                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                <span class="visually-hidden">Next</span>
                            </button>
                        </div>

                    </td>
                    <td>
                        <span class="d-inline-block" tabindex="0" data-bs-toggle="popover" data-bs-trigger="hover focus" data-bs-content="Disabled popover">
                            <a :href="web + item.post_id" v-html="item.title"></a>
                        </span>
                       </td>
                    <td>{{item.area}} 坪</td>
                    <td>{{item.floor_str}}</td>
                    <td>{{item.price}} {{item.price_unit}}</td>
                    <td v-html="item.location"></td>
                    <td>{{item.role_name}}</td>
                </tr>
            </tbody>
        </table>

        <nav aria-label="Page navigation example">
            <ul class="pagination">
                <li v-for="(item,index) in filteredItems.length" class="page-item"><a class="page-link" href="#">{{index + 1}}</a></li>
            </ul>
        </nav>

    </div>
    <div v-else-if="error">
        <h2 style="color:red">{{error.name}}</h2>
        <p>{{error.message}}</p>
    </div>
    <div v-else>
        <h1>No Data</h1>
    </div>
</div>

<style>
    .table th.click {
        cursor: pointer;
    }

    .table th.click {
        cursor: pointer;
    }

    .icon {
        display: inline-block;
    }

    .icon.inverse {
        transform: rotate(180deg)
    }

    table tbody tr:hover {
        cursor: pointer;
         background-color: var(--green-100);
    }

</style>