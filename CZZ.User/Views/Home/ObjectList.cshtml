@section Scripts
    {
    <script type="module">
        const apiUrl = "https://localhost:7224/CZZ/GetObject?Date=" + '@ViewBag.Date';
        //import { createApp, ref } from 'https://unpkg.com/vue@3/dist/vue.global.js'

        const app = Vue.createApp({
            data() {
                return {
                    items: [],
                    web: "https://rent.591.com.tw/home/",
                    queryString: '',
                    sortType: '',
                    isReverse: false,
                    error: ''
                };
            },
            methods: {
                fetchData() {
                    axios.get(apiUrl)
                        .then((response) => {
                            this.items = response.data.data.data;
                        })
                        .catch((error) => {
                            this.error = error;
                        });
                },
                changeType(type) {
                    if (type == this.sortType) {
                        this.isReverse = !this.isReverse
                    }
                    else {
                        this.sortType = type
                    }
                }
            },
            watch() {

            },
            mounted() {
                this.fetchData();
            },
            computed: {
                filteredItems() {
                    // WHY?
                    const cloned = JSON.parse(JSON.stringify(this.items));
                    let temp = [...cloned]

                    const searchText = this.queryString
                    if (searchText) {
                        temp = [...cloned.filter(t => {
                            return t.title.indexOf(searchText) > -1 || t.location.indexOf(searchText) > -1;
                        })]

                        temp.forEach(item=> {
                            item.location = item.location.replace(searchText, `<span style="color:red;font-weight:bold">${searchText}</span>`)
                            item.title = item.title.replace(searchText, `<span style="color:red;font-weight:bold">${searchText}</span>`)
                        })

                    }

                    const type = this.sortType
                    const sortOrder = this.isReverse
                    temp.sort((a, b) => {
                        if (typeof (a[type]) === 'string') {
                            if (this.isReverse) {
                                return (parseInt(b[type].replace(/,/g, ''))) - (parseInt(a[type].replace(/,/g, '')))
                            }
                            else {
                                return (parseInt(a[type].replace(/,/g, ''))) - (parseInt(b[type].replace(/,/g, '')))
                            }
                        }
                        else {
                            if (this.isReverse) {
                                return b[type] - a[type]
                            }
                            else {
                                return a[type] - b[type]
                            }
                        }
                    })


                    return temp;
                }
            }
        });
        app.mount("#app");


    </script>
}

<div id="app">
    <div v-if="!error">
        <h2>@ViewBag.Date 的新物件</h2> @*@ViewBag: 雙刀流，要改掉*@
        <p>Search <input v-model="queryString" /></p>
        <table class="table">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>標題</th>
                    <th class="click" v-on:click="changeType('area')">
                        大小
                        <span class="icon" :class="{'inverse': isReverse}" v-if="sortType == 'area'">
                            <i class="text-success">▲</i>
                        </span>
                    </th>
                    <th>樓層</th>
                    <th class="click" v-on:click="changeType('price')">
                        租金
                        <span class="icon" :class="{'inverse': isReverse}" v-if="sortType == 'price'">
                            <i class="text-success">▲</i>
                        </span>
                    </th>
                    <th>地址</th>
                    <th>來源</th>
                </tr>
            </thead>
            <tbody>
                <tr v-for="item in filteredItems" :key="item.post_id">
                    <td>{{item.post_id}}</td>
                    <td><a :href="web + item.post_id" v-html="item.title"></a></td>
                    <td>{{item.area}} 坪</td>
                    <td>{{item.floor_str}}</td>
                    <td>{{item.price}} {{item.price_unit}}</td>
                    <td v-html="item.location"></td>
                    <td>{{item.role_name}}</td>
                </tr>
            </tbody>
        </table>
    </div>
    <div v-else-if="error">
        <h2 style="color:red">{{error.name}}</h2>
        <p>{{error.message}}</p>
    </div>
    <div v-else>
        <h1>No Data</h1>
    </div>
</div>

<style>
    .table th.click {
        cursor: pointer;
    }

    .table th.click {
        cursor: pointer;
    }

    .icon {
        display: inline-block;
    }

        .icon.inverse {
            transform: rotate(180deg)
        }
</style>